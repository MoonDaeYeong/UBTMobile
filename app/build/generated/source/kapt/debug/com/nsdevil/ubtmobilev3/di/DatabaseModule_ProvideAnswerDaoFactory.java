// Generated by Dagger (https://dagger.dev).
package com.nsdevil.ubtmobilev3.di;

import com.nsdevil.ubtmobilev3.data.db.AppDatabase;
import com.nsdevil.ubtmobilev3.data.db.InAnswerDao;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideAnswerDaoFactory implements Factory<InAnswerDao> {
  private final DatabaseModule module;

  private final Provider<AppDatabase> appDatabaseProvider;

  public DatabaseModule_ProvideAnswerDaoFactory(DatabaseModule module,
      Provider<AppDatabase> appDatabaseProvider) {
    this.module = module;
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public InAnswerDao get() {
    return provideAnswerDao(module, appDatabaseProvider.get());
  }

  public static DatabaseModule_ProvideAnswerDaoFactory create(DatabaseModule module,
      Provider<AppDatabase> appDatabaseProvider) {
    return new DatabaseModule_ProvideAnswerDaoFactory(module, appDatabaseProvider);
  }

  public static InAnswerDao provideAnswerDao(DatabaseModule instance, AppDatabase appDatabase) {
    return Preconditions.checkNotNullFromProvides(instance.provideAnswerDao(appDatabase));
  }
}
