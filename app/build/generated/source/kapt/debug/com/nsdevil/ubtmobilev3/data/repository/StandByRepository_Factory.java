// Generated by Dagger (https://dagger.dev).
package com.nsdevil.ubtmobilev3.data.repository;

import com.nsdevil.ubtmobilev3.api.UbtService;
import com.nsdevil.ubtmobilev3.data.db.InAnswerDao;
import com.nsdevil.ubtmobilev3.data.db.InDataDao;
import com.nsdevil.ubtmobilev3.data.db.InExamInfoDao;
import com.nsdevil.ubtmobilev3.data.db.InQuestionDao;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class StandByRepository_Factory implements Factory<StandByRepository> {
  private final Provider<UbtService> ubtServiceProvider;

  private final Provider<InExamInfoDao> examInfoDaoProvider;

  private final Provider<InAnswerDao> answerDaoProvider;

  private final Provider<InDataDao> dataDaoProvider;

  private final Provider<InQuestionDao> questionDaoProvider;

  public StandByRepository_Factory(Provider<UbtService> ubtServiceProvider,
      Provider<InExamInfoDao> examInfoDaoProvider, Provider<InAnswerDao> answerDaoProvider,
      Provider<InDataDao> dataDaoProvider, Provider<InQuestionDao> questionDaoProvider) {
    this.ubtServiceProvider = ubtServiceProvider;
    this.examInfoDaoProvider = examInfoDaoProvider;
    this.answerDaoProvider = answerDaoProvider;
    this.dataDaoProvider = dataDaoProvider;
    this.questionDaoProvider = questionDaoProvider;
  }

  @Override
  public StandByRepository get() {
    return newInstance(ubtServiceProvider.get(), examInfoDaoProvider.get(), answerDaoProvider.get(), dataDaoProvider.get(), questionDaoProvider.get());
  }

  public static StandByRepository_Factory create(Provider<UbtService> ubtServiceProvider,
      Provider<InExamInfoDao> examInfoDaoProvider, Provider<InAnswerDao> answerDaoProvider,
      Provider<InDataDao> dataDaoProvider, Provider<InQuestionDao> questionDaoProvider) {
    return new StandByRepository_Factory(ubtServiceProvider, examInfoDaoProvider, answerDaoProvider, dataDaoProvider, questionDaoProvider);
  }

  public static StandByRepository newInstance(UbtService ubtService, InExamInfoDao examInfoDao,
      InAnswerDao answerDao, InDataDao dataDao, InQuestionDao questionDao) {
    return new StandByRepository(ubtService, examInfoDao, answerDao, dataDao, questionDao);
  }
}
