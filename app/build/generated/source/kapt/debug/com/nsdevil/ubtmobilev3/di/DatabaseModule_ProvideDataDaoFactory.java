// Generated by Dagger (https://dagger.dev).
package com.nsdevil.ubtmobilev3.di;

import com.nsdevil.ubtmobilev3.data.db.AppDatabase;
import com.nsdevil.ubtmobilev3.data.db.InDataDao;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideDataDaoFactory implements Factory<InDataDao> {
  private final DatabaseModule module;

  private final Provider<AppDatabase> appDatabaseProvider;

  public DatabaseModule_ProvideDataDaoFactory(DatabaseModule module,
      Provider<AppDatabase> appDatabaseProvider) {
    this.module = module;
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public InDataDao get() {
    return provideDataDao(module, appDatabaseProvider.get());
  }

  public static DatabaseModule_ProvideDataDaoFactory create(DatabaseModule module,
      Provider<AppDatabase> appDatabaseProvider) {
    return new DatabaseModule_ProvideDataDaoFactory(module, appDatabaseProvider);
  }

  public static InDataDao provideDataDao(DatabaseModule instance, AppDatabase appDatabase) {
    return Preconditions.checkNotNullFromProvides(instance.provideDataDao(appDatabase));
  }
}
